steps:
  # Step 1: Build the Docker image
  - name: "gcr.io/cloud-builders/docker"
    env: ["DOCKER_BUILDKIT=1"]
    args:
      [
        "build",
        "-t",
        "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE}:${SHORT_SHA}",
        "-t",
        "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE}:latest",
        ".",
      ]

  # Step 2: Push the Docker image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE}:${SHORT_SHA}",
      ]

  # Step 3: Set up Helm and deploy for multiple configurations
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        set -ex
        gcloud container clusters get-credentials ${_KUBE_CLUSTER} --region ${_REGION} --project ${PROJECT_ID}
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        for VALUES_FILE in ${_HELM_VALUES_PATTERN}
        do
          DEPLOYMENT_NAME=$(basename $VALUES_FILE | sed 's/values\.\(.*\)\.yaml/\1/')
          helm dependency update ${_HELM_CHART}
          helm upgrade --install $DEPLOYMENT_NAME ${_HELM_CHART} \
            --namespace ${_KUBE_NAMESPACE} \
            --values $VALUES_FILE \
            --set image.tag=${SHORT_SHA} \
            --reuse-values
        done

images:
  - "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE}:${SHORT_SHA}"

# Substitute variables
substitutions:
  _REGION: "asia-south1"
  _REPOSITORY: "router-apps-asia-south"
  _IMAGE: "near-streamer"
  _KUBE_CLUSTER: "mainnet-tools"
  _KUBE_NAMESPACE: "near-streamer"
  _HELM_CHART: "./infra/helm"
  _HELM_VALUES_PATTERN: "./infra/helm/values.mainnet.*.yaml"
